-- 001 Consulta para Reporte de Cuentas pos Pagar.
-- Objetivo Generar un estado de cuenta al dia de las Cuentas por Pagar.
-- Desarrollado: Ing. Vicente Cueva R.
-- Actualizado: Lunes 20 de Mayo del 2019; Inicio en base del Resumen de CxP.
-- Actualizado: Viernes 24 de Mayo del 2019; Limitar a una fecha de inicio.

--Parametros Fecha Inicial y Fecha Final
Declare @FechaIS as nvarchar(30) 
Declare @FechaFS as nvarchar(30)
Declare @ProveCod as nvarchar(30) 
Declare @MonedNom as nvarchar(30)

Set @FechaIS = CONVERT (DATE, '2019-05-20', 102)
Set @FechaFS = CONVERT (DATE, '2019-05-24', 102) 
Set @ProveCod = 'P90'
--Set @ProveCod = 'P51'
Set @MonedNom = 'Pesos'


Use iteknia

-- Generar Saldo inicial lo que sea menor a la fecha de inicio.

--Select	PRO_CodigoProveedor, 
--		PRO_Nombre,
--		CASE WHEN ROUND ( MONTOACTUAL , 2 ) < 0.09 THEN 0.0 ELSE ROUND ( MONTOACTUAL , 2 ) END AS SALINI, 
--		MON_Nombre
--from ( 
--Select	PRO_CodigoProveedor, 
--		PRO_Nombre,
--		SUM(ROUND ( MONTOACTUAL , 2 )) as MONTOACTUAL,
--		MON_Nombre
--from ( 
Select	CXPR_RegistroCXPId, 
		ISNULL ( CXPR_TERMINOSPAGOEXTRA , 0.0 ) AS CXPR_TERMINOSPAGOEXTRA, 
		UPPER ( CXPR_CodigoRegistro ) AS CXPR_CodigoRegistro, 
		CXPR_FechaRegistro, 
		CXPR_FechaLibroMayor, 
		( CXPR_FechaRegistro + CMDSC_TermsDiasVenc + ISNULL ( CXPR_TERMINOSPAGOEXTRA , 0.0 ) ) AS FECHAVENCIMIENTO,

		--Monto del Registro
		( SUM ( ( ROUND ( CXPRD_Cantidad * CXPRD_PrecioUnitario , 2 ) - ROUND ( CXPRD_Cantidad * CXPRD_PrecioUnitario * ISNULL ( CXPRD_PorcentajeDescuento , 0.0 ) , 2 ) ) + 
		ROUND ( ( ( CXPRD_Cantidad * CXPRD_PrecioUnitario ) - ( CXPRD_Cantidad * CXPRD_PrecioUnitario * ISNULL ( CXPRD_PorcentajeDescuento , 0.0 ) ) ) * ISNULL ( CXPRD_CMIVA_Porcentaje , 0.0 ) , 2 ) ) ) AS TOTAL,

		--Lo Registrado menos los Pagos realizados antes de la Fecha Inicio
		( ( SUM ( ( ROUND ( CXPRD_Cantidad * CXPRD_PrecioUnitario , 2 ) - ROUND ( CXPRD_Cantidad * CXPRD_PrecioUnitario * ISNULL ( CXPRD_PorcentajeDescuento , 0.0 ) , 2 ) ) + ROUND ( ( ( CXPRD_Cantidad * CXPRD_PrecioUnitario ) - ( CXPRD_Cantidad * CXPRD_PrecioUnitario * ISNULL ( CXPRD_PorcentajeDescuento , 0.0 ) ) ) * ISNULL ( CXPRD_CMIVA_Porcentaje , 0.0 ) , 2 ) ) ) 
		- ISNULL ( (Select SUM ( ROUND ( ISNULL ( CXPPD_MontoAplicado , 0.0 ) , 2 ) ) AS CXPPD_MontoAplicado from CXPPagos Inner Join CXPPagosDetalle ON CXPP_PagoCXPId = CXPPD_CXPP_PagoCXPId
		WHERE CXPP_PRV_ProveedorId = CXPR_PRV_ProveedorId AND CXPP_MON_MonedaId = CXPR_MON_MonedaId AND CXPPD_RegistroId = CXPR_RegistroCXPId AND CXPP_Borrado = 0 AND CXPPD_RegistroId IS NOT NULL
		and Cast(CXPP_FechaCaptura as DATE) < @FechaIS ) , 0.0 ) ) AS MONTOACTUAL, 
	 
		MON_Nombre, 
	 
		UPPER ( PRO_CodigoProveedor ) AS PRO_CodigoProveedor, 
		UPPER ( PRO_Nombre ) AS PRO_Nombre, 
		UPPER ( CMDSC_TermsDescuento ) AS CMDSC_TermsDescuento, 
		UPPER ( CMDSC_TermsDiasVenc + ISNULL ( CXPR_TERMINOSPAGOEXTRA , 0.0 ) ) AS CMDSC_TermsDiasVenc,
		CASE WHEN DATEDIFF ( DAY , ( CXPR_FechaRegistro + CMDSC_TermsDiasVenc + ISNULL ( CXPR_TERMINOSPAGOEXTRA , 0.0 ) ) , GETDATE() ) > 0 THEN DATEDIFF ( DAY , ( CXPR_FechaRegistro + CMDSC_TermsDiasVenc + ISNULL ( CXPR_TERMINOSPAGOEXTRA , 0.0 ) ) , GETDATE() ) ELSE 0 END AS DIASTRANSCURRIDOS 
FROM CXPRegistros 
INNER JOIN CXPRegistrosDetalle ON CXPR_RegistroCXPId = CXPRD_CXPR_RegistroCXPId 
INNER JOIN Proveedores ON CXPR_PRV_ProveedorId = PRO_ProveedorId 
INNER JOIN ControlesMaestrosDSC ON CXPR_CMDSC_CodigoId = CMDSC_CodigoId 
INNER JOIN Monedas ON CXPR_MON_MonedaId = MON_MonedaId 
INNER JOIN ControlesMaestrosMultiples ON CXPR_CMM_CuentaCXP = CMM_ControllId AND CMM_Control = 'CMM_CCXP_CUENTASCXP' 
INNER JOIN CuentasContables ON CMM_Valor = CC_CodigoId 
WHERE CXPR_RegistroBorrado = 0 
and CXPR_CMM_TipoRegistro IN ( 'C73B4F7F-4F68-45DD-AA08-07A333D67C89' , 'A8664AC1-4BB7-49D8-AB7F-ABD240F030D9' ) 
and Cast(CXPR_FechaRegistro as DATE) < @FechaIS and MON_Nombre = @MonedNom
and PRO_CodigoProveedor = @ProveCod
Group By CXPR_RegistroCXPId, CXPR_TERMINOSPAGOEXTRA, CXPR_CodigoRegistro,
CXPR_RegistroCXPId,